<?php
/**
 * This file is part of the <Auth> project.
 *
 * @package    Auth
 * @subpackage Repository
 * @author     Etienne de Longeaux <etienne.delongeaux@gmail.com>
 * @since      2012-01-06
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace Sfynx\AuthBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Sfynx\CoreBundle\Repository\TranslationRepository;

/**
 * User Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 
 * @package    Auth
 * @subpackage Repository
 * @author     Etienne de Longeaux <etienne.delongeaux@gmail.com>
 * @since      2012-01-06
 */
class UserRepository extends TranslationRepository
{
    /**
     * Gets all entities by one category.
     * 
     * @param string  $category
     * @param integer $MaxResults
     * @param string  $ORDER_PublishDate ['ASC', 'DESC']
     * @param string  $ORDER_Position    ['ASC', 'DESC']
     * @param boolean $enabled
     * @param boolean $is_checkRoles
     * 
     * @return array\entity
     * @access public
     * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
     * @since  2012-03-15
     */
    public function getAllByParams($category = '', $MaxResults = null, $ORDER_PublishDate = '', $ORDER_Position = '', $enabled = true, $is_checkRoles = true)
    {
        $em = $this->createQueryBuilder('a')->select('a');    
        if ($enabled) {
            $em->andWhere('a.enabled = 1');
        }
        if (!empty($ORDER_PublishDate) && !empty($ORDER_Position)){
            $em
            ->orderBy('a.created_at', $ORDER_PublishDate)
            ->addOrderBy('a.position', $ORDER_Position);
        } elseif (!empty($ORDER_PublishDate) && empty($ORDER_Position)){
            $em
            ->orderBy('a.created_at', $ORDER_PublishDate);
        } elseif (empty($ORDER_PublishDate) && !empty($ORDER_Position)){
            $em
            ->orderBy('a.position', $ORDER_Position);
        }    
        if (!is_null($MaxResults)) {
            $em->setMaxResults($MaxResults);
        }
        if ($is_checkRoles) {
            $em = $this->checkRoles($em);
        }
        
        return $em;
    } 
    
    /**
     * Gets all entities by one category.
     * 
     * @return array\entity
     * @access public
     * @author Etienne de Longeaux <etienne.delongeaux@gmail.com>
     * @since  2012-03-15
     */
    public function getAllEditorUsers()
    {
        return $this
        ->createQueryBuilder('a')
        ->select('a.id, a.name, a.roles')
        ->where("a.roles NOT LIKE '%ROLE_SUBSCRIBER%'")
        ->andWhere("a.roles NOT LIKE '%ROLE_MEMBER%'")
        ->andWhere("a.roles NOT LIKE '%ROLE_PROVIDER%'")
        ->andWhere("a.roles NOT LIKE '%ROLE_CUSTOMER%'")
        ->orderBy('a.name', 'ASC');
    }    
}
